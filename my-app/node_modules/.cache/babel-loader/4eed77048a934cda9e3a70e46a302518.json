{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\adanr\\\\Lambda\\\\WEEK-10\\\\reducer-todo\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  todos: [{\n    item: \"Learn about reducers\",\n    completed: false,\n    id: 3892987586\n  }, {\n    item: \"Eat grass\",\n    completed: false,\n    id: 3892987587\n  }, {\n    item: \"Feed worms\",\n    completed: false,\n    id: 3892987588\n  }]\n};\nexport const todoReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return _objectSpread({}, state, {\n        todos: [...state.todos, {\n          item: action.payload,\n          completed: false,\n          id: Date.now()\n        }]\n      });\n\n    case \"TOGGLE_COMPLETE\":\n      return _objectSpread({}, state, {\n        todos: [...state.todos].map(todo => {\n          if (todo.id === action.payload) {\n            return _objectSpread({}, todo, {\n              completed: !todo.completed\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n\n    case \"REMOVE_TODOS\":\n      return _objectSpread({}, state, {\n        todos: [...state.todos].filter(todo => todo.completed === false)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\adanr\\Lambda\\WEEK-10\\reducer-todo\\my-app\\src\\components\\reducers\\todoReducer.js"],"names":["initialState","todos","item","completed","id","todoReducer","state","action","type","payload","Date","now","map","todo","filter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,EAAE,EAAE;AAHN,GADK,EAML;AACEF,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,EAAE,EAAE;AAHN,GANK,EAWL;AACEF,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,EAAE,EAAE;AAHN,GAXK;AADiB,CAArB;AAmBL,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEEL,QAAAA,KAAK,EAAE,CACL,GAAGK,KAAK,CAACL,KADJ,EAEL;AAAEC,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAAf;AAAwBN,UAAAA,SAAS,EAAE,KAAnC;AAA0CC,UAAAA,EAAE,EAAEM,IAAI,CAACC,GAAL;AAA9C,SAFK;AAFT;;AAQF,SAAK,iBAAL;AACE,+BACKL,KADL;AAEEL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBW,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACT,EAAL,KAAYG,MAAM,CAACE,OAAvB,EAAgC;AAC9B,qCAAYI,IAAZ;AAAkBV,cAAAA,SAAS,EAAE,CAACU,IAAI,CAACV;AAAnC;AACD,WAFD,MAEO;AACL,mBAAOU,IAAP;AACD;AACF,SANM;AAFT;;AAWF,SAAK,cAAL;AACE,+BACKP,KADL;AAEEL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBa,MAAjB,CAAwBD,IAAI,IAAIA,IAAI,CAACV,SAAL,KAAmB,KAAnD;AAFT;;AAIF;AACE,aAAOG,KAAP;AA5BJ;AA8BD,CA/BM","sourcesContent":["export const initialState = {\r\n    todos: [\r\n      {\r\n        item: \"Learn about reducers\",\r\n        completed: false,\r\n        id: 3892987586\r\n      },\r\n      {\r\n        item: \"Eat grass\",\r\n        completed: false,\r\n        id: 3892987587\r\n      },\r\n      {\r\n        item: \"Feed worms\",\r\n        completed: false,\r\n        id: 3892987588\r\n      }\r\n    ]\r\n  };\r\n  export const todoReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_TODO\":\r\n        return {\r\n          ...state,\r\n          todos: [\r\n            ...state.todos,\r\n            { item: action.payload, completed: false, id: Date.now() }\r\n          ]\r\n        };\r\n\r\n      case \"TOGGLE_COMPLETE\":\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].map(todo => {\r\n            if (todo.id === action.payload) {\r\n              return { ...todo, completed: !todo.completed };\r\n            } else {\r\n              return todo;\r\n            }\r\n          })\r\n        };\r\n        \r\n      case \"REMOVE_TODOS\":\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos].filter(todo => todo.completed === false)\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}